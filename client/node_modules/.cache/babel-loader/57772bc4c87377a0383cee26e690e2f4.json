{"ast":null,"code":"import _toConsumableArray from \"/Users/kaeric/workspace/Homework/sentibot/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/kaeric/workspace/Homework/sentibot/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaeric/workspace/Homework/sentibot/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaeric/workspace/Homework/sentibot/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaeric/workspace/Homework/sentibot/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaeric/workspace/Homework/sentibot/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kaeric/workspace/Homework/sentibot/client/src/Components/chatbox/chatbox.js\";\nimport React, { Component } from 'react';\nimport { Launcher } from 'react-chat-window'; // import Talk from \"talkjs\";\n\nvar Chatbox = /*#__PURE__*/function (_Component) {\n  _inherits(Chatbox, _Component);\n\n  //   constructor(props) {\n  //     super(props);\n  //     this.talkjsContainer = React.createRef();\n  //   }\n  //   componentDidMount() {\n  //     // user\n  //     const currentUser = this.props.currentUser;\n  //     console.log(currentUser);\n  //     Talk.ready.then(() => {\n  //       let me = new Talk.User({\n  //         id: currentUser.id,\n  //         name: currentUser.name,\n  //         email: currentUser.email,\n  //         photoUrl: currentUser.photo,\n  //         welcomeMessage: \"Hey there! How are you feeling?\"\n  //       });\n  //       window.talkSession = new Talk.Session({\n  //         appId: \"tcUG0HIm\",\n  //         me: me\n  //       });\n  //       // bot\n  //       let bot = new Talk.User({\n  //         id: \"654321\",\n  //         name: \"SentiBot\",\n  //         email: \"Sebastian@example.com\",\n  //         photoUrl: \"https://demo.talkjs.com/img/sebastian.jpg\",\n  //         welcomeMessage: \"Hey there! How are you feeling today?\"\n  //       });\n  //       let conversation = window.talkSession.getOrCreateConversation(Talk.oneOnOneId(me, bot));\n  //       conversation.setParticipant(me)\n  //       var inbox = window.talkSession.createInbox({ selected: conversation });\n  //       inbox.mount(this.talkjsContainer.current);\n  //     })\n  //   }\n  //   render() {\n  //     return (\n  //       <div ref={this.talkjsContainer}></div>\n  //     )\n  //   }\n  // +================== REACT CHAT NPM +==================\n  function Chatbox() {\n    var _this;\n\n    _classCallCheck(this, Chatbox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chatbox).call(this));\n    _this.state = {\n      messageList: []\n    };\n    return _this;\n  }\n\n  _createClass(Chatbox, [{\n    key: \"_onMessageWasSent\",\n    value: function _onMessageWasSent(message) {\n      this.setState({\n        messageList: [].concat(_toConsumableArray(this.state.messageList), [message])\n      });\n    }\n  }, {\n    key: \"_sendMessage\",\n    value: function _sendMessage(text) {\n      if (text.length > 0) {\n        this.setState({\n          messageList: [].concat(_toConsumableArray(this.state.messageList), [{\n            author: 'them',\n            type: 'text',\n            data: {\n              text: text\n            }\n          }])\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Launcher, {\n        agentProfile: {\n          teamName: 'SentiBot',\n          imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n        },\n        onMessageWasSent: this._onMessageWasSent.bind(this),\n        messageList: this.state.messageList,\n        showEmoji: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Chatbox;\n}(Component);\n\nexport default Chatbox;","map":{"version":3,"sources":["/Users/kaeric/workspace/Homework/sentibot/client/src/Components/chatbox/chatbox.js"],"names":["React","Component","Launcher","Chatbox","state","messageList","message","setState","text","length","author","type","data","teamName","imageUrl","_onMessageWasSent","bind"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,QAAR,QAAuB,mBAAvB,C,CACA;;IAGMC,O;;;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAIE;AACA,qBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAFY;AAKb;;;;sCAEiBC,O,EAAS;AACzB,WAAKC,QAAL,CAAc;AACZF,QAAAA,WAAW,+BAAM,KAAKD,KAAL,CAAWC,WAAjB,IAA8BC,OAA9B;AADC,OAAd;AAGD;;;iCAEYE,I,EAAM;AACjB,UAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnB,aAAKF,QAAL,CAAc;AACZF,UAAAA,WAAW,+BAAM,KAAKD,KAAL,CAAWC,WAAjB,IAA8B;AACvCK,YAAAA,MAAM,EAAE,MAD+B;AAEvCC,YAAAA,IAAI,EAAE,MAFiC;AAGvCC,YAAAA,IAAI,EAAE;AAAEJ,cAAAA,IAAI,EAAJA;AAAF;AAHiC,WAA9B;AADC,SAAd;AAOD;AACF;;;6BAEQ;AACP,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACN,oBAAC,QAAD;AACE,QAAA,YAAY,EAAE;AACZK,UAAAA,QAAQ,EAAE,UADE;AAEZC,UAAAA,QAAQ,EAAE;AAFE,SADhB;AAKE,QAAA,gBAAgB,EAAE,KAAKC,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CALpB;AAME,QAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWC,WAN1B;AAOE,QAAA,SAAS,MAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,CAAR;AAWD;;;;EAxFmBJ,S;;AA2FtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport {Launcher} from 'react-chat-window'\n// import Talk from \"talkjs\";\n\n\nclass Chatbox extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.talkjsContainer = React.createRef();\n//   }\n//   componentDidMount() {\n//     // user\n//     const currentUser = this.props.currentUser;\n//     console.log(currentUser);\n//     Talk.ready.then(() => {\n//       let me = new Talk.User({\n//         id: currentUser.id,\n//         name: currentUser.name,\n//         email: currentUser.email,\n//         photoUrl: currentUser.photo,\n//         welcomeMessage: \"Hey there! How are you feeling?\"\n//       });\n\n\n//       window.talkSession = new Talk.Session({\n//         appId: \"tcUG0HIm\",\n//         me: me\n//       });\n//       // bot\n//       let bot = new Talk.User({\n//         id: \"654321\",\n//         name: \"SentiBot\",\n//         email: \"Sebastian@example.com\",\n//         photoUrl: \"https://demo.talkjs.com/img/sebastian.jpg\",\n//         welcomeMessage: \"Hey there! How are you feeling today?\"\n//       });\n\n//       let conversation = window.talkSession.getOrCreateConversation(Talk.oneOnOneId(me, bot));\n//       conversation.setParticipant(me)\n//       var inbox = window.talkSession.createInbox({ selected: conversation });\n//       inbox.mount(this.talkjsContainer.current);\n\n//     })\n\n\n//   }\n\n//   render() {\n//     return (\n//       <div ref={this.talkjsContainer}></div>\n//     )\n//   }\n\n\n\n  // +================== REACT CHAT NPM +==================\n  constructor() {\n    super();\n    this.state = {\n      messageList: []\n    };\n  }\n\n  _onMessageWasSent(message) {\n    this.setState({\n      messageList: [...this.state.messageList, message]\n    })\n  }\n\n  _sendMessage(text) {\n    if (text.length > 0) {\n      this.setState({\n        messageList: [...this.state.messageList, {\n          author: 'them',\n          type: 'text',\n          data: { text }\n        }]\n      })\n    }\n  }\n\n  render() {\n    return (<div>\n      <Launcher\n        agentProfile={{\n          teamName: 'SentiBot',\n          imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n        }}\n        onMessageWasSent={this._onMessageWasSent.bind(this)}\n        messageList={this.state.messageList}\n        showEmoji\n      />\n    </div>)\n  }\n}\n\nexport default Chatbox;"]},"metadata":{},"sourceType":"module"}