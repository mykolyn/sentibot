{"ast":null,"code":"import _classCallCheck from \"/Users/kaeric/workspace/Homework/sentibot/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaeric/workspace/Homework/sentibot/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaeric/workspace/Homework/sentibot/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaeric/workspace/Homework/sentibot/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaeric/workspace/Homework/sentibot/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kaeric/workspace/Homework/sentibot/client/src/Components/chatbox/chatbox.js\";\nimport React, { Component } from 'react'; // import {Launcher} from 'react-chat-window'\n\nimport Talk from \"talkjs\"; // class Chatbox extends Component {\n\nvar Chatbox = /*#__PURE__*/function (_Component) {\n  _inherits(Chatbox, _Component);\n\n  function Chatbox(props) {\n    var _this;\n\n    _classCallCheck(this, Chatbox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chatbox).call(this, props));\n    _this.talkjsContainer = React.createRef();\n    return _this;\n  }\n\n  _createClass(Chatbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // user\n      var currentUser = this.props.currentUser;\n      console.log(currentUser);\n      Talk.ready.then(function () {\n        var me = new Talk.User({\n          id: currentUser.id,\n          name: currentUser.name,\n          email: currentUser.email,\n          photoUrl: currentUser.photo,\n          welcomeMessage: \"Hey there! How are you feeling?\"\n        });\n        window.talkSession = new Talk.Session({\n          appId: \"tcUG0HIm\",\n          me: me\n        }); // bot\n\n        var bot = new Talk.User({\n          id: \"654321\",\n          name: \"SentiBot\",\n          email: \"Sebastian@example.com\",\n          photoUrl: \"https://demo.talkjs.com/img/sebastian.jpg\",\n          welcomeMessage: \"Hey there! How are you feeling today?\"\n        });\n        var conversation = window.talkSession.getOrCreateConversation(Talk.oneOnOneId(me, bot));\n        conversation.setParticipant(me);\n        var inbox = window.talkSession.createInbox({\n          selected: conversation\n        });\n        inbox.mount(_this2.talkjsContainer.current);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.talkjsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      });\n    } // +================== REACT CHAT NPM +==================\n    // constructor() {\n    //   super();\n    //   this.state = {\n    //     messageList: []\n    //   };\n    // }\n    // _onMessageWasSent(message) {\n    //   this.setState({\n    //     messageList: [...this.state.messageList, message]\n    //   })\n    // }\n    // _sendMessage(text) {\n    //   if (text.length > 0) {\n    //     this.setState({\n    //       messageList: [...this.state.messageList, {\n    //         author: 'them',\n    //         type: 'text',\n    //         data: { text }\n    //       }]\n    //     })\n    //   }\n    // }\n    // render() {\n    //   return (<div>\n    //     <Launcher\n    //       agentProfile={{\n    //         teamName: 'SentiBot',\n    //         imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n    //       }}\n    //       onMessageWasSent={this._onMessageWasSent.bind(this)}\n    //       messageList={this.state.messageList}\n    //       showEmoji\n    //     />\n    //   </div>)\n    // }\n\n  }]);\n\n  return Chatbox;\n}(Component);\n\nexport default Chatbox; // ========= reat chat box =========\n// constructor() {\n//   super();\n//   this.state = {\n//     messageList: []\n//   };\n// }\n// _onMessageWasSent(message) {\n//   this.setState({\n//     messageList: [...this.state.messageList, message]\n//   })\n// }\n// _sendMessage(text) {\n//   if (text.length > 0) {\n//     this.setState({\n//       messageList: [...this.state.messageList, {\n//         author: 'them',\n//         type: 'text',\n//         data: { text }\n//       }]\n//     })\n//   }\n// }\n// render() {\n//   return (<div>\n//     <Launcher\n//       agentProfile={{\n//         teamName: 'react-chat-window',\n//         imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n//       }}\n//       onMessageWasSent={this._onMessageWasSent.bind(this)}\n//       messageList={this.state.messageList}\n//       showEmoji\n//     />\n//   </div>)\n// }\n// }\n// export default Chatbox;","map":{"version":3,"sources":["/Users/kaeric/workspace/Homework/sentibot/client/src/Components/chatbox/chatbox.js"],"names":["React","Component","Talk","Chatbox","props","talkjsContainer","createRef","currentUser","console","log","ready","then","me","User","id","name","email","photoUrl","photo","welcomeMessage","window","talkSession","Session","appId","bot","conversation","getOrCreateConversation","oneOnOneId","setParticipant","inbox","createInbox","selected","mount","current"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;IAIQC,O;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,eAAL,GAAuBL,KAAK,CAACM,SAAN,EAAvB;AAFiB;AAGlB;;;;wCACmB;AAAA;;AAClB;AACA,UAAMC,WAAW,GAAG,KAAKH,KAAL,CAAWG,WAA/B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAL,MAAAA,IAAI,CAACQ,KAAL,CAAWC,IAAX,CAAgB,YAAM;AACpB,YAAIC,EAAE,GAAG,IAAIV,IAAI,CAACW,IAAT,CAAc;AACrBC,UAAAA,EAAE,EAAEP,WAAW,CAACO,EADK;AAErBC,UAAAA,IAAI,EAAER,WAAW,CAACQ,IAFG;AAGrBC,UAAAA,KAAK,EAAET,WAAW,CAACS,KAHE;AAIrBC,UAAAA,QAAQ,EAAEV,WAAW,CAACW,KAJD;AAKrBC,UAAAA,cAAc,EAAE;AALK,SAAd,CAAT;AASAC,QAAAA,MAAM,CAACC,WAAP,GAAqB,IAAInB,IAAI,CAACoB,OAAT,CAAiB;AACpCC,UAAAA,KAAK,EAAE,UAD6B;AAEpCX,UAAAA,EAAE,EAAEA;AAFgC,SAAjB,CAArB,CAVoB,CAcpB;;AACA,YAAIY,GAAG,GAAG,IAAItB,IAAI,CAACW,IAAT,CAAc;AACtBC,UAAAA,EAAE,EAAE,QADkB;AAEtBC,UAAAA,IAAI,EAAE,UAFgB;AAGtBC,UAAAA,KAAK,EAAE,uBAHe;AAItBC,UAAAA,QAAQ,EAAE,2CAJY;AAKtBE,UAAAA,cAAc,EAAE;AALM,SAAd,CAAV;AAQA,YAAIM,YAAY,GAAGL,MAAM,CAACC,WAAP,CAAmBK,uBAAnB,CAA2CxB,IAAI,CAACyB,UAAL,CAAgBf,EAAhB,EAAoBY,GAApB,CAA3C,CAAnB;AACAC,QAAAA,YAAY,CAACG,cAAb,CAA4BhB,EAA5B;AACA,YAAIiB,KAAK,GAAGT,MAAM,CAACC,WAAP,CAAmBS,WAAnB,CAA+B;AAAEC,UAAAA,QAAQ,EAAEN;AAAZ,SAA/B,CAAZ;AACAI,QAAAA,KAAK,CAACG,KAAN,CAAY,MAAI,CAAC3B,eAAL,CAAqB4B,OAAjC;AAED,OA5BD;AA+BD;;;6BAEQ;AACP,0BACE;AAAK,QAAA,GAAG,EAAE,KAAK5B,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,K,CAID;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;EAxFoBJ,S;;AA2FtB,eAAeE,OAAf,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAEA","sourcesContent":["import React, {Component} from 'react'\n// import {Launcher} from 'react-chat-window'\nimport Talk from \"talkjs\";\n// class Chatbox extends Component {\n  \n  \n  \n  class Chatbox extends Component {\n    constructor(props) {\n      super(props);\n      this.talkjsContainer = React.createRef();\n    }\n    componentDidMount() {\n      // user\n      const currentUser = this.props.currentUser;\n      console.log(currentUser);\n      Talk.ready.then(() => {\n        let me = new Talk.User({\n          id: currentUser.id,\n          name: currentUser.name,\n          email: currentUser.email,\n          photoUrl: currentUser.photo,\n          welcomeMessage: \"Hey there! How are you feeling?\"\n        });\n  \n  \n        window.talkSession = new Talk.Session({\n          appId: \"tcUG0HIm\",\n          me: me\n        });\n        // bot\n        let bot = new Talk.User({\n          id: \"654321\",\n          name: \"SentiBot\",\n          email: \"Sebastian@example.com\",\n          photoUrl: \"https://demo.talkjs.com/img/sebastian.jpg\",\n          welcomeMessage: \"Hey there! How are you feeling today?\"\n        });\n  \n        let conversation = window.talkSession.getOrCreateConversation(Talk.oneOnOneId(me, bot));\n        conversation.setParticipant(me)\n        var inbox = window.talkSession.createInbox({ selected: conversation });\n        inbox.mount(this.talkjsContainer.current);\n  \n      })\n  \n  \n    }\n  \n    render() {\n      return (\n        <div ref={this.talkjsContainer}></div>\n      )\n    }\n  \n  \n  \n    // +================== REACT CHAT NPM +==================\n    // constructor() {\n    //   super();\n    //   this.state = {\n    //     messageList: []\n    //   };\n    // }\n  \n    // _onMessageWasSent(message) {\n    //   this.setState({\n    //     messageList: [...this.state.messageList, message]\n    //   })\n    // }\n  \n    // _sendMessage(text) {\n    //   if (text.length > 0) {\n    //     this.setState({\n    //       messageList: [...this.state.messageList, {\n    //         author: 'them',\n    //         type: 'text',\n    //         data: { text }\n    //       }]\n    //     })\n    //   }\n    // }\n  \n    // render() {\n    //   return (<div>\n    //     <Launcher\n    //       agentProfile={{\n    //         teamName: 'SentiBot',\n    //         imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n    //       }}\n    //       onMessageWasSent={this._onMessageWasSent.bind(this)}\n    //       messageList={this.state.messageList}\n    //       showEmoji\n    //     />\n    //   </div>)\n    // }\n  }\n  \n  export default Chatbox;\n\n\n\n\n  // ========= reat chat box =========\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     messageList: []\n  //   };\n  // }\n \n  // _onMessageWasSent(message) {\n  //   this.setState({\n  //     messageList: [...this.state.messageList, message]\n  //   })\n  // }\n \n  // _sendMessage(text) {\n  //   if (text.length > 0) {\n  //     this.setState({\n  //       messageList: [...this.state.messageList, {\n  //         author: 'them',\n  //         type: 'text',\n  //         data: { text }\n  //       }]\n  //     })\n  //   }\n  // }\n \n  // render() {\n  //   return (<div>\n  //     <Launcher\n  //       agentProfile={{\n  //         teamName: 'react-chat-window',\n  //         imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n  //       }}\n  //       onMessageWasSent={this._onMessageWasSent.bind(this)}\n  //       messageList={this.state.messageList}\n  //       showEmoji\n  //     />\n  //   </div>)\n  // }\n// }\n\n// export default Chatbox;"]},"metadata":{},"sourceType":"module"}