{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport closeIcon from './../assets/close-icon.png';\n\nvar Header = function (_Component) {\n  _inherits(Header, _Component);\n\n  function Header() {\n    _classCallCheck(this, Header);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Header.prototype.render = function render() {\n    return React.createElement('div', {\n      className: 'sc-header'\n    }, React.createElement('img', {\n      className: 'sc-header--img',\n      src: this.props.imageUrl,\n      alt: ''\n    }), React.createElement('div', {\n      className: 'sc-header--team-name'\n    }, ' ', this.props.teamName, ' '), React.createElement('div', {\n      className: 'sc-header--close-button',\n      onClick: this.props.onClose\n    }, React.createElement('img', {\n      src: closeIcon,\n      alt: ''\n    })));\n  };\n\n  return Header;\n}(Component);\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}