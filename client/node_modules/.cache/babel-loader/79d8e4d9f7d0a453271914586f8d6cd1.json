{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport Message from './Messages';\n\nvar MessageList = function (_Component) {\n  _inherits(MessageList, _Component);\n\n  function MessageList() {\n    _classCallCheck(this, MessageList);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  MessageList.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    this.scrollList.scrollTop = this.scrollList.scrollHeight;\n  };\n\n  MessageList.prototype.render = function render() {\n    var _this2 = this;\n\n    return React.createElement('div', {\n      className: 'sc-message-list',\n      ref: function ref(el) {\n        return _this2.scrollList = el;\n      }\n    }, this.props.messages.map(function (message, i) {\n      return React.createElement(Message, {\n        message: message,\n        key: i\n      });\n    }));\n  };\n\n  return MessageList;\n}(Component);\n\nexport default MessageList;","map":null,"metadata":{},"sourceType":"module"}